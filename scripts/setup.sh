#!/usr/bin/env bash
set -euo pipefail

# Interactive setup to generate .env and optionally run docker compose

ROOT_DIR="$(cd "$(dirname "$0")"/.. && pwd)"
cd "$ROOT_DIR"

ENV_FILE=".env"

echo "===> Interactive setup (press Enter to accept defaults)"

read -rp "Bot token (BOT_TOKEN) [required]: " BOT_TOKEN
while [[ -z "${BOT_TOKEN:-}" ]]; do
  echo "BOT_TOKEN is required."
  read -rp "Bot token (BOT_TOKEN): " BOT_TOKEN
done

read -rp "Admin IDs (comma-separated, e.g. 123,456) [optional]: " ADMIN_IDS_RAW || true
ADMIN_IDS_RAW=${ADMIN_IDS_RAW:-}
if [[ -n "$ADMIN_IDS_RAW" ]]; then
  # Convert comma-separated to JSON-like list [123,456]
  ADMIN_IDS="[${ADMIN_IDS_RAW// /}]"  # remove spaces
else
  ADMIN_IDS="[]"
fi

read -rp "Bot username (BOT_USERNAME) [optional]: " BOT_USERNAME || true
BOT_USERNAME=${BOT_USERNAME:-}

read -rp "Database name (POSTGRES_DB) [vpn_bot]: " POSTGRES_DB || true
POSTGRES_DB=${POSTGRES_DB:-vpn_bot}

read -rp "Database user (POSTGRES_USER) [vpn_user]: " POSTGRES_USER || true
POSTGRES_USER=${POSTGRES_USER:-vpn_user}

read -rp "Database password (POSTGRES_PASSWORD) [vpn_pass]: " POSTGRES_PASSWORD || true
POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-vpn_pass}

DB_URL_DEFAULT="postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}"
read -rp "DATABASE_URL [${DB_URL_DEFAULT}]: " DATABASE_URL || true
DATABASE_URL=${DATABASE_URL:-$DB_URL_DEFAULT}

read -rp "App env (APP_ENV) [production]: " APP_ENV || true
APP_ENV=${APP_ENV:-production}

read -rp "Log level (LOG_LEVEL) [INFO]: " LOG_LEVEL || true
LOG_LEVEL=${LOG_LEVEL:-INFO}

read -rp "Run docker compose up -d --build now? [Y/n]: " RUN_NOW || true
RUN_NOW=${RUN_NOW:-Y}

echo "===> Writing ${ENV_FILE}"
cat > "$ENV_FILE" <<ENV
# Generated by scripts/setup.sh

# Telegram Bot
BOT_TOKEN=${BOT_TOKEN}
ADMIN_IDS=${ADMIN_IDS}
BOT_USERNAME=${BOT_USERNAME}

# Database (PostgreSQL)
POSTGRES_DB=${POSTGRES_DB}
POSTGRES_USER=${POSTGRES_USER}
POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
DATABASE_URL=${DATABASE_URL}

# App
APP_ENV=${APP_ENV}
LOG_LEVEL=${LOG_LEVEL}
ENV

echo "===> .env created"

if [[ "${RUN_NOW}" =~ ^[Yy]$ ]]; then
  echo "===> Starting docker compose (build + up)"
  docker compose build --no-cache api bot
  docker compose up -d
  echo "===> Tail logs (Ctrl+C to stop)"
  docker compose logs -f bot
else
  echo "===> Skipping docker compose run. You can start later with:"
  echo "      docker compose up -d --build"
fi

