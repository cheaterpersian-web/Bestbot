BOT_TOKEN=your_telegram_bot_token_here
ADMIN_IDS=[123456789]
BOT_USERNAME=

# Database (PostgreSQL inside docker-compose)
POSTGRES_DB=vpn_bot
POSTGRES_USER=vpn_user
POSTGRES_PASSWORD=vpn_pass
DATABASE_URL=postgresql+asyncpg://vpn_user:vpn_pass@db:5432/vpn_bot

# App
APP_ENV=production
LOG_LEVEL=INFO

# WebApp (public URL if you expose over HTTPS)
WEBAPP_URL=

# HTTPS / Caddy (optional; if set, enables HTTPS reverse proxy)
DOMAIN=
EMAIL=
# Telegram Bot
BOT_TOKEN=your_telegram_bot_token_here
ADMIN_IDS=[123456789]

# WebApp
WEBAPP_URL=https://your.domain

# Database
POSTGRES_DB=vpn_bot
POSTGRES_USER=vpn_user
POSTGRES_PASSWORD=vpn_pass
DATABASE_URL=postgresql+asyncpg://vpn_user:vpn_pass@db:5432/vpn_bot

# HTTPS / Caddy
DOMAIN=your.domain
EMAIL=you@example.com

# v1.0.1 Example Environment

# Telegram Bot
BOT_TOKEN=your_telegram_bot_token_here
ADMIN_IDS=[123456789]
BOT_USERNAME=your_bot_username

# Database (PostgreSQL)
POSTGRES_DB=vpn_bot
POSTGRES_USER=vpn_user
POSTGRES_PASSWORD=vpn_pass
DATABASE_URL=postgresql+asyncpg://vpn_user:vpn_pass@db:5432/vpn_bot

# App
APP_ENV=production
LOG_LEVEL=INFO

# Sales / Payments
SALES_ENABLED=true
AUTO_APPROVE_RECEIPTS=false
MIN_TOPUP_AMOUNT=50000
MAX_TOPUP_AMOUNT=50000000

# Security
ENABLE_FRAUD_DETECTION=true
MAX_DAILY_TRANSACTIONS=10
MAX_DAILY_AMOUNT=1000000

# Optional integrations
STATUS_URL=
UPTIME_ROBOT_API_KEY=
SUPPORT_CHANNEL=
# ===========================================
# VPN TELEGRAM BOT CONFIGURATION
# ===========================================

# ===========================================
# TELEGRAM BOT CONFIGURATION
# ===========================================
# Get this from @BotFather on Telegram
BOT_TOKEN=your_telegram_bot_token_here

# Admin user IDs (comma-separated or JSON array)
# Example: [123456789,987654321] or 123456789,987654321
ADMIN_IDS=[]

# Bot username (without @)
BOT_USERNAME=your_bot_username

# ===========================================
# DATABASE CONFIGURATION
# ===========================================
# MySQL connection string
DATABASE_URL=mysql+aiomysql://vpn_user:vpn_pass@db:3306/vpn_bot?charset=utf8mb4

# Alternative PostgreSQL connection
# DATABASE_URL=postgresql+asyncpg://vpn_user:vpn_pass@db:5432/vpn_bot

# ===========================================
# SALES & PAYMENT CONFIGURATION
# ===========================================
# Enable/disable sales
SALES_ENABLED=true

# Auto-approve receipts (set to false for manual review)
AUTO_APPROVE_RECEIPTS=false

# Minimum and maximum top-up amounts (in IRR)
MIN_TOPUP_AMOUNT=50000
MAX_TOPUP_AMOUNT=50000000

# Enable test accounts
ENABLE_TEST_ACCOUNTS=false

# Require phone verification
REQUIRE_PHONE_VERIFICATION=false

# Require joining channel
JOIN_CHANNEL_REQUIRED=false
CHANNEL_USERNAME=@your_channel

# ===========================================
# SECURITY CONFIGURATION
# ===========================================
# Enable fraud detection
ENABLE_FRAUD_DETECTION=true

# Maximum transactions per day per user
MAX_DAILY_TRANSACTIONS=10

# Maximum amount per day per user (in IRR)
MAX_DAILY_AMOUNT=1000000

# ===========================================
# REFERRAL SYSTEM
# ===========================================
# Referral bonus percentage
REFERRAL_PERCENT=10

# Fixed referral bonus amount (in IRR)
REFERRAL_FIXED=0

# ===========================================
# PAYMENT GATEWAYS
# ===========================================
# Telegram Stars
ENABLE_STARS=false

# Zarinpal Gateway
ENABLE_ZARINPAL=false
ZARINPAL_MERCHANT_ID=

# ===========================================
# VPN PANEL CONFIGURATION
# ===========================================
# Default panel type: mock | xui | 3xui | hiddify | sanaei
DEFAULT_PANEL_MODE=mock

# ===========================================
# MISCELLANEOUS
# ===========================================
# Application environment: development | production
APP_ENV=development

# Log level: DEBUG | INFO | WARNING | ERROR
LOG_LEVEL=INFO

# Status page URL
STATUS_URL=https://your-status-page.com

# Uptime Robot API key for monitoring
UPTIME_ROBOT_API_KEY=

# Support channel username
SUPPORT_CHANNEL=@your_support_channel

# ===========================================
# DOCKER CONFIGURATION
# ===========================================
# Database credentials (for Docker)
MYSQL_DATABASE=vpn_bot
MYSQL_USER=vpn_user
MYSQL_PASSWORD=vpn_pass
MYSQL_ROOT_PASSWORD=root_password_here

# ===========================================
# API CONFIGURATION
# ===========================================
# API host and port
API_HOST=0.0.0.0
API_PORT=8000

# API secret key for authentication
API_SECRET_KEY=your_secret_key_here

# ===========================================
# REDIS CONFIGURATION (Optional)
# ===========================================
# Redis URL for caching and sessions
# REDIS_URL=redis://redis:6379/0

# ===========================================
# EMAIL CONFIGURATION (Optional)
# ===========================================
# SMTP settings for notifications
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your_email@gmail.com
# SMTP_PASSWORD=your_app_password
# SMTP_FROM=your_email@gmail.com

# ===========================================
# WEBHOOK CONFIGURATION (Production)
# ===========================================
# Webhook URL for production deployment
# WEBHOOK_URL=https://yourdomain.com/webhook
# WEBHOOK_SECRET=your_webhook_secret

# ===========================================
# MONITORING CONFIGURATION
# ===========================================
# Sentry DSN for error tracking
# SENTRY_DSN=https://your-sentry-dsn

# Prometheus metrics endpoint
# ENABLE_METRICS=true
# METRICS_PORT=9090